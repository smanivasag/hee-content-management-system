name: Continuous Integration [CI]

on:
  push:
    branches-ignore:
      - 'develop'
      - 'release/**'
  pull_request:
    branches: ['**']

jobs:
  buildAndTest:
    name: Build & Test

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Configure maven settings
        uses: whelk-io/maven-settings-xml-action@v4
        with:
          repositories: '[{ "id": "hippo-maven2-enterprise", "url": "https://maven.onehippo.com/maven2-enterprise/" }]'
          plugin_repositories: '[{ "id": "hippo-maven2-enterprise", "url": "https://maven.onehippo.com/maven2-enterprise/" }]'
          servers: '[{ "id": "hippo-maven2-enterprise", "username": "${{ secrets.BLOOMREACH_MVN_USERNAME }}", "password": "${{ secrets.BLOOMREACH_MVN_PASSWORD }}" }]'

      - name: Cache maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      # - name: Compile
      #   run: mvn -B clean compile -Pdefault --file pom.xml

      # - name: Test
      #   run: mvn -B clean test -Pdefault --file pom.xml

      - name: Package
        run: mvn -B verify && mvn -P mvn -P dist --file pom.xml
        id: package

      - name: Extract distribution file path
        id: dist
        run: echo "::set-output name=distPath::$(ls -1 ${{ github.workspace }}/target/$(mvn help:evaluate -Dexpression=project.artifactId -q -DforceStdout)-$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)-*.tar.gz)"

      - name: Prints distribution file path
        run: echo ${{ steps.dist.outputs.distPath }}